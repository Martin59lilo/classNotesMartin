a <- 3
b <-
a <- 3
b <- 5
a <- 3
b <- 5
suma <- a+b
resta <- a-b
a <- 3
b <- 4
suma <- a+b
resta <- a-b
clear
clc
cls
a+b
resta+suma
edad <- c(14,15,20,15)
# Media:
mean(edad)
# Media:
mean(edad)
# Mediana:
mediana <- median(edad)
# Media:
media <- mean(edad)
# Mediana:
mediana <- median(edad)
clcl
cl
clc
close()
getwd()
getwd()
DF <- read_csv("obesidad.csv")
install.packages("readr")
install.packages("gplot2")
install.packages("dplyr")
library(readr)
library(ggplot2)
library(dplyr)
clear
pwd
getwd()
setwd("~/Martin/Brain_Martin/Classes/Ciclo 2025-0/Estadística y Probabilidades")
setwd("~/Martin/Brain_Martin/Classes/Ciclo 2025-0/Estadística y Probabilidades/Ejercicio_2")
DF <- read_csv("obesidad.csv")
DF <- read_csv("obesidad.csv")
DF
View(DF)
View(DF)
DF <- read_csv("obesidad.csv")
DF
View(DF)
# Mostrar el número de valores faltantes por columna:
apply(is.na(DF),2,sum)
colnames(DF)
colnames(DF)[12] <- "history"
colnames(DF)
str(DF)
# Variable: Age
mean(DF$Age)
attach(DF)
median(Weight)
summary(DF)
# Mostrar los valores de las frecuencias absolutas simples de una variable:
table(Gender)
t1 <- table(Gender)
barras <- barplot(t1, col = rainbow(3), ylim = c(0, 2200), main = "Sexo de los pacientes", xlab = "Sexo", ylab = "Número de pacientes")
text(barras, t1 + 120, labels = t1)
ggplot(DF, aes(x = Gender)) +
geom_bar(width=0.5, colour="black", fill="skyblue") +
labs(x="Sexo",y= "Número de pacientes")  +
ylim(c(0,2200)) +
ggtitle("Diagrama de barras") +
theme_bw(base_size = 14) +
geom_text(aes(label=..count..), stat='count',
position=position_dodge(0.9),
vjust=-0.5,
size=5.0
) +
facet_wrap(~"Variable Sexo")
etiquetas <- paste0(round(100 * t1/sum(t1), 2), "%")
pie(t1, labels = etiquetas, main = "Porcentaje de pacientes según su Sexo",
col = c("red", "lightgreen"))
legend("topleft", legend = c("Female", "Male"),
fill =  c("red", "lightgreen"))
library("scales")
attach(DF)
library("scales")
library("scales")
t2 <- DF %>%
group_by(Gender) %>% # Variable a ser transformada
count() %>%
ungroup() %>%
mutate(prob = n / sum(n)) %>% # Se genera una nueva columna "prob"
arrange(prob) %>%
mutate(porcentaje = scales::percent(prob)) # Se genera una nueva columna "porcentaje"
t2
getwd() # Ruta del directorio actual
setwd("D:/UTEC/DATA")
setwd("/home/martin_bonilla__/Martin/Brain_Martin/Classes/Ciclo 2025-0/Estadística y Probabilidades/Ejercicio_2")
getwd()
DF <- read_csv("obesidad.csv")
DF <- read_csv("obesidad.csv")
getwd()
DF <- read_csv("obesidad.csv")
install.packages("readr")
install.packages("modeest")
library(readr)
library(modeest)
DF <- read_csv("obesidad.csv")
View(DF)
DF <- read_csv("obesidad.csv")
View(DF)
# Mostrar el número de valores faltantes por columna:
apply(is.na(DF),2,sum)
colnames(DF)
colnames(DF)[12] <- "history"
str(DF)
colnames(DF)
#install.packages("readr")
#install.packages("modeest")
library(readr)
library(modeest)
getwd() # Ruta del directorio actual
setwd("D:/UTEC/DATA")
#install.packages("readr")
#install.packages("modeest")
library(readr)
library(modeest)
getwd() # Ruta del directorio actual
# setwd("D:/UTEC/DATA")
getwd()
DF <- read_csv("obesidad.csv")
View(DF)
# Mostrar el número de valores faltantes por columna:
apply(is.na(DF),2,sum)
colnames(DF)
colnames(DF)[12] <- "history"
str(DF)
colnames(DF)
media_edad <- mean(DF$Age)
media_edad
media_edad_redondeada <- round(media_edad,2)
media_edad_redondeada
mediana_edad <- median(DF$Age)
mediana_edad
mediana_edad_redondeada <- round(mediana_edad,2)
mediana_edad_redondeada
# La función mfv permite calcular la moda.
moda_edad <- mfv(DF$Age)
moda_edad
attach(DF)
attach(DF)
# Media
media_estatura <- round(mean(Height),2)
media_estatura
# Mediana
mediana_estatura <- round(median(Height),2)
mediana_estatura
# Moda
moda_estatura <- round(mfv(Height),2)
moda_estatura
varianza_peso <- var(Weight)
varianza_peso
RI_peso <- IQR(Weight)
RI_peso
DE_peso <- sd(Weight)
DE_peso
DE_peso <- sqrt(varianza_peso)
DE_peso
